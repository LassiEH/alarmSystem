
sensorControl.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000478  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000404  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000001  00800100  00800100  00000478  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000478  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000004a8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000030  00000000  00000000  000004e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000007c5  00000000  00000000  00000518  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006d3  00000000  00000000  00000cdd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000002db  00000000  00000000  000013b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000044  00000000  00000000  0000168c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003d4  00000000  00000000  000016d0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000009c  00000000  00000000  00001aa4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000020  00000000  00000000  00001b40  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a1 30       	cpi	r26, 0x01	; 1
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 7e 00 	call	0xfc	; 0xfc <main>
  88:	0c 94 00 02 	jmp	0x400	; 0x400 <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <pulse>:
volatile int8_t g_STATE = 0;


void pulse()
{
	PORTB |= (1 << PB1);
  90:	85 b1       	in	r24, 0x05	; 5
  92:	82 60       	ori	r24, 0x02	; 2
  94:	85 b9       	out	0x05, r24	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  96:	85 e3       	ldi	r24, 0x35	; 53
  98:	8a 95       	dec	r24
  9a:	f1 f7       	brne	.-4      	; 0x98 <pulse+0x8>
  9c:	00 00       	nop
	_delay_us(10);
	PORTB &= ~(1 << PB1);
  9e:	85 b1       	in	r24, 0x05	; 5
  a0:	8d 7f       	andi	r24, 0xFD	; 253
  a2:	85 b9       	out	0x05, r24	; 5
  a4:	08 95       	ret

000000a6 <distanceCalc>:
}

int16_t distanceCalc()
{
	while (!(PIND & (1 << PD4)));
  a6:	4c 9b       	sbis	0x09, 4	; 9
  a8:	fe cf       	rjmp	.-4      	; 0xa6 <distanceCalc>
	
	TCNT1 = 0;
  aa:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
  ae:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
	
	while(PIND & (1 << PD4));
  b2:	4c 99       	sbic	0x09, 4	; 9
  b4:	fe cf       	rjmp	.-4      	; 0xb2 <distanceCalc+0xc>
	
	int16_t pulseWidth = TCNT1;
  b6:	60 91 84 00 	lds	r22, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
  ba:	70 91 85 00 	lds	r23, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
	int16_t duration = pulseWidth * (1.0 / F_CPU);
  be:	07 2e       	mov	r0, r23
  c0:	00 0c       	add	r0, r0
  c2:	88 0b       	sbc	r24, r24
  c4:	99 0b       	sbc	r25, r25
  c6:	0e 94 e3 00 	call	0x1c6	; 0x1c6 <__floatsisf>
  ca:	2d eb       	ldi	r18, 0xBD	; 189
  cc:	37 e3       	ldi	r19, 0x37	; 55
  ce:	46 e8       	ldi	r20, 0x86	; 134
  d0:	53 e3       	ldi	r21, 0x33	; 51
  d2:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <__mulsf3>
  d6:	0e 94 ab 00 	call	0x156	; 0x156 <__fixsfsi>
	
	int16_t distance = (duration * 343) / 2;
  da:	27 e5       	ldi	r18, 0x57	; 87
  dc:	31 e0       	ldi	r19, 0x01	; 1
  de:	26 9f       	mul	r18, r22
  e0:	a0 01       	movw	r20, r0
  e2:	27 9f       	mul	r18, r23
  e4:	50 0d       	add	r21, r0
  e6:	36 9f       	mul	r19, r22
  e8:	50 0d       	add	r21, r0
  ea:	11 24       	eor	r1, r1
  ec:	55 23       	and	r21, r21
  ee:	14 f4       	brge	.+4      	; 0xf4 <distanceCalc+0x4e>
  f0:	4f 5f       	subi	r20, 0xFF	; 255
  f2:	5f 4f       	sbci	r21, 0xFF	; 255
	return distance;
}
  f4:	ca 01       	movw	r24, r20
  f6:	95 95       	asr	r25
  f8:	87 95       	ror	r24
  fa:	08 95       	ret

000000fc <main>:


int main(void)
{
	DDRB |= (1 << PB1); // ultrasonic trigger
  fc:	84 b1       	in	r24, 0x04	; 4
  fe:	82 60       	ori	r24, 0x02	; 2
 100:	84 b9       	out	0x04, r24	; 4
	DDRB |= (1 << PB0); // passive buzzer
 102:	84 b1       	in	r24, 0x04	; 4
 104:	81 60       	ori	r24, 0x01	; 1
 106:	84 b9       	out	0x04, r24	; 4
	DDRD &= ~(1 << PD5); // IR-receiver
 108:	8a b1       	in	r24, 0x0a	; 10
 10a:	8f 7d       	andi	r24, 0xDF	; 223
 10c:	8a b9       	out	0x0a, r24	; 10
	DDRD &= ~(1 << PD4); // ultrasonic echo
 10e:	8a b1       	in	r24, 0x0a	; 10
 110:	8f 7e       	andi	r24, 0xEF	; 239
 112:	8a b9       	out	0x0a, r24	; 10
    //int8_t g_IR_receiver = 0;
	//int8_t g_us_echo = 0;
	int16_t distance = 0;
    while (1) 
    {
		pulse();
 114:	0e 94 48 00 	call	0x90	; 0x90 <pulse>
		distance = distanceCalc();
 118:	0e 94 53 00 	call	0xa6	; 0xa6 <distanceCalc>
		if (distance < 1.0)
 11c:	bc 01       	movw	r22, r24
 11e:	99 0f       	add	r25, r25
 120:	88 0b       	sbc	r24, r24
 122:	99 0b       	sbc	r25, r25
 124:	0e 94 e3 00 	call	0x1c6	; 0x1c6 <__floatsisf>
 128:	20 e0       	ldi	r18, 0x00	; 0
 12a:	30 e0       	ldi	r19, 0x00	; 0
 12c:	40 e8       	ldi	r20, 0x80	; 128
 12e:	5f e3       	ldi	r21, 0x3F	; 63
 130:	0e 94 a6 00 	call	0x14c	; 0x14c <__cmpsf2>
 134:	88 23       	and	r24, r24
 136:	24 f4       	brge	.+8      	; 0x140 <main+0x44>
		{
			PORTB |= (1 << PB0);
 138:	85 b1       	in	r24, 0x05	; 5
 13a:	81 60       	ori	r24, 0x01	; 1
 13c:	85 b9       	out	0x05, r24	; 5
 13e:	03 c0       	rjmp	.+6      	; 0x146 <main+0x4a>
		}
		else
		{
			PORTB &= ~(1 << PB0);
 140:	85 b1       	in	r24, 0x05	; 5
 142:	8e 7f       	andi	r24, 0xFE	; 254
 144:	85 b9       	out	0x05, r24	; 5
		}
		
		switch (g_STATE) {
 146:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 14a:	e4 cf       	rjmp	.-56     	; 0x114 <main+0x18>

0000014c <__cmpsf2>:
 14c:	0e 94 1e 01 	call	0x23c	; 0x23c <__fp_cmp>
 150:	08 f4       	brcc	.+2      	; 0x154 <__cmpsf2+0x8>
 152:	81 e0       	ldi	r24, 0x01	; 1
 154:	08 95       	ret

00000156 <__fixsfsi>:
 156:	0e 94 b2 00 	call	0x164	; 0x164 <__fixunssfsi>
 15a:	68 94       	set
 15c:	b1 11       	cpse	r27, r1
 15e:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__fp_szero>
 162:	08 95       	ret

00000164 <__fixunssfsi>:
 164:	0e 94 4a 01 	call	0x294	; 0x294 <__fp_splitA>
 168:	88 f0       	brcs	.+34     	; 0x18c <__fixunssfsi+0x28>
 16a:	9f 57       	subi	r25, 0x7F	; 127
 16c:	98 f0       	brcs	.+38     	; 0x194 <__fixunssfsi+0x30>
 16e:	b9 2f       	mov	r27, r25
 170:	99 27       	eor	r25, r25
 172:	b7 51       	subi	r27, 0x17	; 23
 174:	b0 f0       	brcs	.+44     	; 0x1a2 <__fixunssfsi+0x3e>
 176:	e1 f0       	breq	.+56     	; 0x1b0 <__fixunssfsi+0x4c>
 178:	66 0f       	add	r22, r22
 17a:	77 1f       	adc	r23, r23
 17c:	88 1f       	adc	r24, r24
 17e:	99 1f       	adc	r25, r25
 180:	1a f0       	brmi	.+6      	; 0x188 <__fixunssfsi+0x24>
 182:	ba 95       	dec	r27
 184:	c9 f7       	brne	.-14     	; 0x178 <__fixunssfsi+0x14>
 186:	14 c0       	rjmp	.+40     	; 0x1b0 <__fixunssfsi+0x4c>
 188:	b1 30       	cpi	r27, 0x01	; 1
 18a:	91 f0       	breq	.+36     	; 0x1b0 <__fixunssfsi+0x4c>
 18c:	0e 94 64 01 	call	0x2c8	; 0x2c8 <__fp_zero>
 190:	b1 e0       	ldi	r27, 0x01	; 1
 192:	08 95       	ret
 194:	0c 94 64 01 	jmp	0x2c8	; 0x2c8 <__fp_zero>
 198:	67 2f       	mov	r22, r23
 19a:	78 2f       	mov	r23, r24
 19c:	88 27       	eor	r24, r24
 19e:	b8 5f       	subi	r27, 0xF8	; 248
 1a0:	39 f0       	breq	.+14     	; 0x1b0 <__fixunssfsi+0x4c>
 1a2:	b9 3f       	cpi	r27, 0xF9	; 249
 1a4:	cc f3       	brlt	.-14     	; 0x198 <__fixunssfsi+0x34>
 1a6:	86 95       	lsr	r24
 1a8:	77 95       	ror	r23
 1aa:	67 95       	ror	r22
 1ac:	b3 95       	inc	r27
 1ae:	d9 f7       	brne	.-10     	; 0x1a6 <__fixunssfsi+0x42>
 1b0:	3e f4       	brtc	.+14     	; 0x1c0 <__fixunssfsi+0x5c>
 1b2:	90 95       	com	r25
 1b4:	80 95       	com	r24
 1b6:	70 95       	com	r23
 1b8:	61 95       	neg	r22
 1ba:	7f 4f       	sbci	r23, 0xFF	; 255
 1bc:	8f 4f       	sbci	r24, 0xFF	; 255
 1be:	9f 4f       	sbci	r25, 0xFF	; 255
 1c0:	08 95       	ret

000001c2 <__floatunsisf>:
 1c2:	e8 94       	clt
 1c4:	09 c0       	rjmp	.+18     	; 0x1d8 <__floatsisf+0x12>

000001c6 <__floatsisf>:
 1c6:	97 fb       	bst	r25, 7
 1c8:	3e f4       	brtc	.+14     	; 0x1d8 <__floatsisf+0x12>
 1ca:	90 95       	com	r25
 1cc:	80 95       	com	r24
 1ce:	70 95       	com	r23
 1d0:	61 95       	neg	r22
 1d2:	7f 4f       	sbci	r23, 0xFF	; 255
 1d4:	8f 4f       	sbci	r24, 0xFF	; 255
 1d6:	9f 4f       	sbci	r25, 0xFF	; 255
 1d8:	99 23       	and	r25, r25
 1da:	a9 f0       	breq	.+42     	; 0x206 <__floatsisf+0x40>
 1dc:	f9 2f       	mov	r31, r25
 1de:	96 e9       	ldi	r25, 0x96	; 150
 1e0:	bb 27       	eor	r27, r27
 1e2:	93 95       	inc	r25
 1e4:	f6 95       	lsr	r31
 1e6:	87 95       	ror	r24
 1e8:	77 95       	ror	r23
 1ea:	67 95       	ror	r22
 1ec:	b7 95       	ror	r27
 1ee:	f1 11       	cpse	r31, r1
 1f0:	f8 cf       	rjmp	.-16     	; 0x1e2 <__floatsisf+0x1c>
 1f2:	fa f4       	brpl	.+62     	; 0x232 <__floatsisf+0x6c>
 1f4:	bb 0f       	add	r27, r27
 1f6:	11 f4       	brne	.+4      	; 0x1fc <__floatsisf+0x36>
 1f8:	60 ff       	sbrs	r22, 0
 1fa:	1b c0       	rjmp	.+54     	; 0x232 <__floatsisf+0x6c>
 1fc:	6f 5f       	subi	r22, 0xFF	; 255
 1fe:	7f 4f       	sbci	r23, 0xFF	; 255
 200:	8f 4f       	sbci	r24, 0xFF	; 255
 202:	9f 4f       	sbci	r25, 0xFF	; 255
 204:	16 c0       	rjmp	.+44     	; 0x232 <__floatsisf+0x6c>
 206:	88 23       	and	r24, r24
 208:	11 f0       	breq	.+4      	; 0x20e <__floatsisf+0x48>
 20a:	96 e9       	ldi	r25, 0x96	; 150
 20c:	11 c0       	rjmp	.+34     	; 0x230 <__floatsisf+0x6a>
 20e:	77 23       	and	r23, r23
 210:	21 f0       	breq	.+8      	; 0x21a <__floatsisf+0x54>
 212:	9e e8       	ldi	r25, 0x8E	; 142
 214:	87 2f       	mov	r24, r23
 216:	76 2f       	mov	r23, r22
 218:	05 c0       	rjmp	.+10     	; 0x224 <__floatsisf+0x5e>
 21a:	66 23       	and	r22, r22
 21c:	71 f0       	breq	.+28     	; 0x23a <__floatsisf+0x74>
 21e:	96 e8       	ldi	r25, 0x86	; 134
 220:	86 2f       	mov	r24, r22
 222:	70 e0       	ldi	r23, 0x00	; 0
 224:	60 e0       	ldi	r22, 0x00	; 0
 226:	2a f0       	brmi	.+10     	; 0x232 <__floatsisf+0x6c>
 228:	9a 95       	dec	r25
 22a:	66 0f       	add	r22, r22
 22c:	77 1f       	adc	r23, r23
 22e:	88 1f       	adc	r24, r24
 230:	da f7       	brpl	.-10     	; 0x228 <__floatsisf+0x62>
 232:	88 0f       	add	r24, r24
 234:	96 95       	lsr	r25
 236:	87 95       	ror	r24
 238:	97 f9       	bld	r25, 7
 23a:	08 95       	ret

0000023c <__fp_cmp>:
 23c:	99 0f       	add	r25, r25
 23e:	00 08       	sbc	r0, r0
 240:	55 0f       	add	r21, r21
 242:	aa 0b       	sbc	r26, r26
 244:	e0 e8       	ldi	r30, 0x80	; 128
 246:	fe ef       	ldi	r31, 0xFE	; 254
 248:	16 16       	cp	r1, r22
 24a:	17 06       	cpc	r1, r23
 24c:	e8 07       	cpc	r30, r24
 24e:	f9 07       	cpc	r31, r25
 250:	c0 f0       	brcs	.+48     	; 0x282 <__fp_cmp+0x46>
 252:	12 16       	cp	r1, r18
 254:	13 06       	cpc	r1, r19
 256:	e4 07       	cpc	r30, r20
 258:	f5 07       	cpc	r31, r21
 25a:	98 f0       	brcs	.+38     	; 0x282 <__fp_cmp+0x46>
 25c:	62 1b       	sub	r22, r18
 25e:	73 0b       	sbc	r23, r19
 260:	84 0b       	sbc	r24, r20
 262:	95 0b       	sbc	r25, r21
 264:	39 f4       	brne	.+14     	; 0x274 <__fp_cmp+0x38>
 266:	0a 26       	eor	r0, r26
 268:	61 f0       	breq	.+24     	; 0x282 <__fp_cmp+0x46>
 26a:	23 2b       	or	r18, r19
 26c:	24 2b       	or	r18, r20
 26e:	25 2b       	or	r18, r21
 270:	21 f4       	brne	.+8      	; 0x27a <__fp_cmp+0x3e>
 272:	08 95       	ret
 274:	0a 26       	eor	r0, r26
 276:	09 f4       	brne	.+2      	; 0x27a <__fp_cmp+0x3e>
 278:	a1 40       	sbci	r26, 0x01	; 1
 27a:	a6 95       	lsr	r26
 27c:	8f ef       	ldi	r24, 0xFF	; 255
 27e:	81 1d       	adc	r24, r1
 280:	81 1d       	adc	r24, r1
 282:	08 95       	ret

00000284 <__fp_split3>:
 284:	57 fd       	sbrc	r21, 7
 286:	90 58       	subi	r25, 0x80	; 128
 288:	44 0f       	add	r20, r20
 28a:	55 1f       	adc	r21, r21
 28c:	59 f0       	breq	.+22     	; 0x2a4 <__fp_splitA+0x10>
 28e:	5f 3f       	cpi	r21, 0xFF	; 255
 290:	71 f0       	breq	.+28     	; 0x2ae <__fp_splitA+0x1a>
 292:	47 95       	ror	r20

00000294 <__fp_splitA>:
 294:	88 0f       	add	r24, r24
 296:	97 fb       	bst	r25, 7
 298:	99 1f       	adc	r25, r25
 29a:	61 f0       	breq	.+24     	; 0x2b4 <__fp_splitA+0x20>
 29c:	9f 3f       	cpi	r25, 0xFF	; 255
 29e:	79 f0       	breq	.+30     	; 0x2be <__fp_splitA+0x2a>
 2a0:	87 95       	ror	r24
 2a2:	08 95       	ret
 2a4:	12 16       	cp	r1, r18
 2a6:	13 06       	cpc	r1, r19
 2a8:	14 06       	cpc	r1, r20
 2aa:	55 1f       	adc	r21, r21
 2ac:	f2 cf       	rjmp	.-28     	; 0x292 <__fp_split3+0xe>
 2ae:	46 95       	lsr	r20
 2b0:	f1 df       	rcall	.-30     	; 0x294 <__fp_splitA>
 2b2:	08 c0       	rjmp	.+16     	; 0x2c4 <__fp_splitA+0x30>
 2b4:	16 16       	cp	r1, r22
 2b6:	17 06       	cpc	r1, r23
 2b8:	18 06       	cpc	r1, r24
 2ba:	99 1f       	adc	r25, r25
 2bc:	f1 cf       	rjmp	.-30     	; 0x2a0 <__fp_splitA+0xc>
 2be:	86 95       	lsr	r24
 2c0:	71 05       	cpc	r23, r1
 2c2:	61 05       	cpc	r22, r1
 2c4:	08 94       	sec
 2c6:	08 95       	ret

000002c8 <__fp_zero>:
 2c8:	e8 94       	clt

000002ca <__fp_szero>:
 2ca:	bb 27       	eor	r27, r27
 2cc:	66 27       	eor	r22, r22
 2ce:	77 27       	eor	r23, r23
 2d0:	cb 01       	movw	r24, r22
 2d2:	97 f9       	bld	r25, 7
 2d4:	08 95       	ret

000002d6 <__mulsf3>:
 2d6:	0e 94 7e 01 	call	0x2fc	; 0x2fc <__mulsf3x>
 2da:	0c 94 ef 01 	jmp	0x3de	; 0x3de <__fp_round>
 2de:	0e 94 e1 01 	call	0x3c2	; 0x3c2 <__fp_pscA>
 2e2:	38 f0       	brcs	.+14     	; 0x2f2 <__mulsf3+0x1c>
 2e4:	0e 94 e8 01 	call	0x3d0	; 0x3d0 <__fp_pscB>
 2e8:	20 f0       	brcs	.+8      	; 0x2f2 <__mulsf3+0x1c>
 2ea:	95 23       	and	r25, r21
 2ec:	11 f0       	breq	.+4      	; 0x2f2 <__mulsf3+0x1c>
 2ee:	0c 94 d8 01 	jmp	0x3b0	; 0x3b0 <__fp_inf>
 2f2:	0c 94 de 01 	jmp	0x3bc	; 0x3bc <__fp_nan>
 2f6:	11 24       	eor	r1, r1
 2f8:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__fp_szero>

000002fc <__mulsf3x>:
 2fc:	0e 94 42 01 	call	0x284	; 0x284 <__fp_split3>
 300:	70 f3       	brcs	.-36     	; 0x2de <__mulsf3+0x8>

00000302 <__mulsf3_pse>:
 302:	95 9f       	mul	r25, r21
 304:	c1 f3       	breq	.-16     	; 0x2f6 <__mulsf3+0x20>
 306:	95 0f       	add	r25, r21
 308:	50 e0       	ldi	r21, 0x00	; 0
 30a:	55 1f       	adc	r21, r21
 30c:	62 9f       	mul	r22, r18
 30e:	f0 01       	movw	r30, r0
 310:	72 9f       	mul	r23, r18
 312:	bb 27       	eor	r27, r27
 314:	f0 0d       	add	r31, r0
 316:	b1 1d       	adc	r27, r1
 318:	63 9f       	mul	r22, r19
 31a:	aa 27       	eor	r26, r26
 31c:	f0 0d       	add	r31, r0
 31e:	b1 1d       	adc	r27, r1
 320:	aa 1f       	adc	r26, r26
 322:	64 9f       	mul	r22, r20
 324:	66 27       	eor	r22, r22
 326:	b0 0d       	add	r27, r0
 328:	a1 1d       	adc	r26, r1
 32a:	66 1f       	adc	r22, r22
 32c:	82 9f       	mul	r24, r18
 32e:	22 27       	eor	r18, r18
 330:	b0 0d       	add	r27, r0
 332:	a1 1d       	adc	r26, r1
 334:	62 1f       	adc	r22, r18
 336:	73 9f       	mul	r23, r19
 338:	b0 0d       	add	r27, r0
 33a:	a1 1d       	adc	r26, r1
 33c:	62 1f       	adc	r22, r18
 33e:	83 9f       	mul	r24, r19
 340:	a0 0d       	add	r26, r0
 342:	61 1d       	adc	r22, r1
 344:	22 1f       	adc	r18, r18
 346:	74 9f       	mul	r23, r20
 348:	33 27       	eor	r19, r19
 34a:	a0 0d       	add	r26, r0
 34c:	61 1d       	adc	r22, r1
 34e:	23 1f       	adc	r18, r19
 350:	84 9f       	mul	r24, r20
 352:	60 0d       	add	r22, r0
 354:	21 1d       	adc	r18, r1
 356:	82 2f       	mov	r24, r18
 358:	76 2f       	mov	r23, r22
 35a:	6a 2f       	mov	r22, r26
 35c:	11 24       	eor	r1, r1
 35e:	9f 57       	subi	r25, 0x7F	; 127
 360:	50 40       	sbci	r21, 0x00	; 0
 362:	9a f0       	brmi	.+38     	; 0x38a <__mulsf3_pse+0x88>
 364:	f1 f0       	breq	.+60     	; 0x3a2 <__mulsf3_pse+0xa0>
 366:	88 23       	and	r24, r24
 368:	4a f0       	brmi	.+18     	; 0x37c <__mulsf3_pse+0x7a>
 36a:	ee 0f       	add	r30, r30
 36c:	ff 1f       	adc	r31, r31
 36e:	bb 1f       	adc	r27, r27
 370:	66 1f       	adc	r22, r22
 372:	77 1f       	adc	r23, r23
 374:	88 1f       	adc	r24, r24
 376:	91 50       	subi	r25, 0x01	; 1
 378:	50 40       	sbci	r21, 0x00	; 0
 37a:	a9 f7       	brne	.-22     	; 0x366 <__mulsf3_pse+0x64>
 37c:	9e 3f       	cpi	r25, 0xFE	; 254
 37e:	51 05       	cpc	r21, r1
 380:	80 f0       	brcs	.+32     	; 0x3a2 <__mulsf3_pse+0xa0>
 382:	0c 94 d8 01 	jmp	0x3b0	; 0x3b0 <__fp_inf>
 386:	0c 94 65 01 	jmp	0x2ca	; 0x2ca <__fp_szero>
 38a:	5f 3f       	cpi	r21, 0xFF	; 255
 38c:	e4 f3       	brlt	.-8      	; 0x386 <__mulsf3_pse+0x84>
 38e:	98 3e       	cpi	r25, 0xE8	; 232
 390:	d4 f3       	brlt	.-12     	; 0x386 <__mulsf3_pse+0x84>
 392:	86 95       	lsr	r24
 394:	77 95       	ror	r23
 396:	67 95       	ror	r22
 398:	b7 95       	ror	r27
 39a:	f7 95       	ror	r31
 39c:	e7 95       	ror	r30
 39e:	9f 5f       	subi	r25, 0xFF	; 255
 3a0:	c1 f7       	brne	.-16     	; 0x392 <__mulsf3_pse+0x90>
 3a2:	fe 2b       	or	r31, r30
 3a4:	88 0f       	add	r24, r24
 3a6:	91 1d       	adc	r25, r1
 3a8:	96 95       	lsr	r25
 3aa:	87 95       	ror	r24
 3ac:	97 f9       	bld	r25, 7
 3ae:	08 95       	ret

000003b0 <__fp_inf>:
 3b0:	97 f9       	bld	r25, 7
 3b2:	9f 67       	ori	r25, 0x7F	; 127
 3b4:	80 e8       	ldi	r24, 0x80	; 128
 3b6:	70 e0       	ldi	r23, 0x00	; 0
 3b8:	60 e0       	ldi	r22, 0x00	; 0
 3ba:	08 95       	ret

000003bc <__fp_nan>:
 3bc:	9f ef       	ldi	r25, 0xFF	; 255
 3be:	80 ec       	ldi	r24, 0xC0	; 192
 3c0:	08 95       	ret

000003c2 <__fp_pscA>:
 3c2:	00 24       	eor	r0, r0
 3c4:	0a 94       	dec	r0
 3c6:	16 16       	cp	r1, r22
 3c8:	17 06       	cpc	r1, r23
 3ca:	18 06       	cpc	r1, r24
 3cc:	09 06       	cpc	r0, r25
 3ce:	08 95       	ret

000003d0 <__fp_pscB>:
 3d0:	00 24       	eor	r0, r0
 3d2:	0a 94       	dec	r0
 3d4:	12 16       	cp	r1, r18
 3d6:	13 06       	cpc	r1, r19
 3d8:	14 06       	cpc	r1, r20
 3da:	05 06       	cpc	r0, r21
 3dc:	08 95       	ret

000003de <__fp_round>:
 3de:	09 2e       	mov	r0, r25
 3e0:	03 94       	inc	r0
 3e2:	00 0c       	add	r0, r0
 3e4:	11 f4       	brne	.+4      	; 0x3ea <__fp_round+0xc>
 3e6:	88 23       	and	r24, r24
 3e8:	52 f0       	brmi	.+20     	; 0x3fe <__fp_round+0x20>
 3ea:	bb 0f       	add	r27, r27
 3ec:	40 f4       	brcc	.+16     	; 0x3fe <__fp_round+0x20>
 3ee:	bf 2b       	or	r27, r31
 3f0:	11 f4       	brne	.+4      	; 0x3f6 <__fp_round+0x18>
 3f2:	60 ff       	sbrs	r22, 0
 3f4:	04 c0       	rjmp	.+8      	; 0x3fe <__fp_round+0x20>
 3f6:	6f 5f       	subi	r22, 0xFF	; 255
 3f8:	7f 4f       	sbci	r23, 0xFF	; 255
 3fa:	8f 4f       	sbci	r24, 0xFF	; 255
 3fc:	9f 4f       	sbci	r25, 0xFF	; 255
 3fe:	08 95       	ret

00000400 <_exit>:
 400:	f8 94       	cli

00000402 <__stop_program>:
 402:	ff cf       	rjmp	.-2      	; 0x402 <__stop_program>


sensorControl.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000576  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000502  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000003  00800100  00800100  00000576  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000576  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000005a8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000048  00000000  00000000  000005e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000093d  00000000  00000000  00000630  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000079c  00000000  00000000  00000f6d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003b2  00000000  00000000  00001709  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000008c  00000000  00000000  00001abc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000411  00000000  00000000  00001b48  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000001a1  00000000  00000000  00001f59  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000038  00000000  00000000  000020fa  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   8:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
   c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  10:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  14:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  18:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  1c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  20:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  24:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  28:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  2c:	0c 94 48 00 	jmp	0x90	; 0x90 <__vector_11>
  30:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  34:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  38:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  3c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  40:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  44:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  48:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  4c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  50:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  54:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  58:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  5c:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  60:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>
  64:	0c 94 46 00 	jmp	0x8c	; 0x8c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_clear_bss>:
  74:	21 e0       	ldi	r18, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	01 c0       	rjmp	.+2      	; 0x7e <.do_clear_bss_start>

0000007c <.do_clear_bss_loop>:
  7c:	1d 92       	st	X+, r1

0000007e <.do_clear_bss_start>:
  7e:	a3 30       	cpi	r26, 0x03	; 3
  80:	b2 07       	cpc	r27, r18
  82:	e1 f7       	brne	.-8      	; 0x7c <.do_clear_bss_loop>
  84:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <main>
  88:	0c 94 7f 02 	jmp	0x4fe	; 0x4fe <_exit>

0000008c <__bad_interrupt>:
  8c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000090 <__vector_11>:
int16_t distance = 0;



ISR (TIMER1_COMPA_vect)
{
  90:	1f 92       	push	r1
  92:	0f 92       	push	r0
  94:	0f b6       	in	r0, 0x3f	; 63
  96:	0f 92       	push	r0
  98:	11 24       	eor	r1, r1
	TCNT1 = 0;
  9a:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
  9e:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
}
  a2:	0f 90       	pop	r0
  a4:	0f be       	out	0x3f, r0	; 63
  a6:	0f 90       	pop	r0
  a8:	1f 90       	pop	r1
  aa:	18 95       	reti

000000ac <calculateTOP>:


int calculateTOP(int freq, int prescaler)
{
	long f_clkIO = F_CPU;
	return (f_clkIO) / (2*prescaler*freq);
  ac:	66 0f       	add	r22, r22
  ae:	77 1f       	adc	r23, r23
  b0:	9c 01       	movw	r18, r24
  b2:	62 9f       	mul	r22, r18
  b4:	c0 01       	movw	r24, r0
  b6:	63 9f       	mul	r22, r19
  b8:	90 0d       	add	r25, r0
  ba:	72 9f       	mul	r23, r18
  bc:	90 0d       	add	r25, r0
  be:	11 24       	eor	r1, r1
  c0:	9c 01       	movw	r18, r24
  c2:	99 0f       	add	r25, r25
  c4:	44 0b       	sbc	r20, r20
  c6:	55 0b       	sbc	r21, r21
  c8:	60 e0       	ldi	r22, 0x00	; 0
  ca:	74 e2       	ldi	r23, 0x24	; 36
  cc:	84 ef       	ldi	r24, 0xF4	; 244
  ce:	90 e0       	ldi	r25, 0x00	; 0
  d0:	0e 94 3e 02 	call	0x47c	; 0x47c <__divmodsi4>
}
  d4:	c9 01       	movw	r24, r18
  d6:	08 95       	ret

000000d8 <soundBuzzer>:

void soundBuzzer()
{	
  d8:	cf 93       	push	r28
  da:	df 93       	push	r29
	sei();
  dc:	78 94       	sei
	TCCR1A = 0;
  de:	e0 e8       	ldi	r30, 0x80	; 128
  e0:	f0 e0       	ldi	r31, 0x00	; 0
  e2:	10 82       	st	Z, r1
	TCCR1B = 0;
  e4:	c1 e8       	ldi	r28, 0x81	; 129
  e6:	d0 e0       	ldi	r29, 0x00	; 0
  e8:	18 82       	st	Y, r1
	TCNT1 = 0;
  ea:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7f8085>
  ee:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7f8084>
	
	TCCR1A |= (1 << COM1A0);
  f2:	80 81       	ld	r24, Z
  f4:	80 64       	ori	r24, 0x40	; 64
  f6:	80 83       	st	Z, r24
	
	TCCR1A |= (1 << WGM10);
  f8:	80 81       	ld	r24, Z
  fa:	81 60       	ori	r24, 0x01	; 1
  fc:	80 83       	st	Z, r24
	TCCR1B |= (1 << WGM13);
  fe:	88 81       	ld	r24, Y
 100:	80 61       	ori	r24, 0x10	; 16
 102:	88 83       	st	Y, r24
	
	TIMSK1 |= (1 << OCIE1A);
 104:	ef e6       	ldi	r30, 0x6F	; 111
 106:	f0 e0       	ldi	r31, 0x00	; 0
 108:	80 81       	ld	r24, Z
 10a:	82 60       	ori	r24, 0x02	; 2
 10c:	80 83       	st	Z, r24
	
	OCR1A = calculateTOP(523, 1);
 10e:	61 e0       	ldi	r22, 0x01	; 1
 110:	70 e0       	ldi	r23, 0x00	; 0
 112:	8b e0       	ldi	r24, 0x0B	; 11
 114:	92 e0       	ldi	r25, 0x02	; 2
 116:	0e 94 56 00 	call	0xac	; 0xac <calculateTOP>
 11a:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7f8089>
 11e:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7f8088>
	
	//while(1)
	TCCR1B |= (1 << CS10);
 122:	88 81       	ld	r24, Y
 124:	81 60       	ori	r24, 0x01	; 1
 126:	88 83       	st	Y, r24
	PORTB &= ~(1 << PB1);
 128:	85 b1       	in	r24, 0x05	; 5
 12a:	8d 7f       	andi	r24, 0xFD	; 253
 12c:	85 b9       	out	0x05, r24	; 5
}
 12e:	df 91       	pop	r29
 130:	cf 91       	pop	r28
 132:	08 95       	ret

00000134 <offBuzzer>:

void offBuzzer()
{
	TCCR1B = 0;
 134:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__TEXT_REGION_LENGTH__+0x7f8081>
	TCCR1A &= ~(1 << COM1A0);
 138:	e0 e8       	ldi	r30, 0x80	; 128
 13a:	f0 e0       	ldi	r31, 0x00	; 0
 13c:	80 81       	ld	r24, Z
 13e:	8f 7b       	andi	r24, 0xBF	; 191
 140:	80 83       	st	Z, r24
	PORTB &= ~(1 << PB1);
 142:	85 b1       	in	r24, 0x05	; 5
 144:	8d 7f       	andi	r24, 0xFD	; 253
 146:	85 b9       	out	0x05, r24	; 5
 148:	08 95       	ret

0000014a <pulse>:

int16_t pulse()
{
	//int16_t pulseWidth;
	// Trigger pulse
	PORTB |= (1 << PB0);
 14a:	85 b1       	in	r24, 0x05	; 5
 14c:	81 60       	ori	r24, 0x01	; 1
 14e:	85 b9       	out	0x05, r24	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 150:	85 e3       	ldi	r24, 0x35	; 53
 152:	8a 95       	dec	r24
 154:	f1 f7       	brne	.-4      	; 0x152 <pulse+0x8>
 156:	00 00       	nop
	_delay_us(10);
	PORTB &= ~(1 << PB0);
 158:	85 b1       	in	r24, 0x05	; 5
 15a:	8e 7f       	andi	r24, 0xFE	; 254
 15c:	85 b9       	out	0x05, r24	; 5
	
	while (!(PIND & (1 << PD4)));
 15e:	4c 9b       	sbis	0x09, 4	; 9
 160:	fe cf       	rjmp	.-4      	; 0x15e <pulse+0x14>
 162:	60 e0       	ldi	r22, 0x00	; 0
 164:	70 e0       	ldi	r23, 0x00	; 0
 166:	06 c0       	rjmp	.+12     	; 0x174 <pulse+0x2a>
	//TCCR1B |= (1 << CS11);
	uint16_t duration = 0;
	while (PIND & (1 << PD4))
	{
		duration++;
 168:	6f 5f       	subi	r22, 0xFF	; 255
 16a:	7f 4f       	sbci	r23, 0xFF	; 255
 16c:	85 e0       	ldi	r24, 0x05	; 5
 16e:	8a 95       	dec	r24
 170:	f1 f7       	brne	.-4      	; 0x16e <pulse+0x24>
 172:	00 00       	nop
	PORTB &= ~(1 << PB0);
	
	while (!(PIND & (1 << PD4)));
	//TCCR1B |= (1 << CS11);
	uint16_t duration = 0;
	while (PIND & (1 << PD4))
 174:	4c 99       	sbic	0x09, 4	; 9
 176:	f8 cf       	rjmp	.-16     	; 0x168 <pulse+0x1e>
		duration++;
		_delay_us(1);
	}
	//TCCR1B = 0;
	
	int16_t distance = ((duration * 0.0343) / 2);
 178:	80 e0       	ldi	r24, 0x00	; 0
 17a:	90 e0       	ldi	r25, 0x00	; 0
 17c:	0e 94 43 01 	call	0x286	; 0x286 <__floatunsisf>
 180:	28 e2       	ldi	r18, 0x28	; 40
 182:	3e e7       	ldi	r19, 0x7E	; 126
 184:	4c e0       	ldi	r20, 0x0C	; 12
 186:	5d e3       	ldi	r21, 0x3D	; 61
 188:	0e 94 a9 01 	call	0x352	; 0x352 <__mulsf3>
 18c:	20 e0       	ldi	r18, 0x00	; 0
 18e:	30 e0       	ldi	r19, 0x00	; 0
 190:	40 e0       	ldi	r20, 0x00	; 0
 192:	5f e3       	ldi	r21, 0x3F	; 63
 194:	0e 94 a9 01 	call	0x352	; 0x352 <__mulsf3>
 198:	0e 94 0d 01 	call	0x21a	; 0x21a <__fixsfsi>
	return distance;
	
}
 19c:	cb 01       	movw	r24, r22
 19e:	08 95       	ret

000001a0 <main>:


int main(void)
{
	DDRB |= (1 << PB0); // ultrasonic trigger
 1a0:	84 b1       	in	r24, 0x04	; 4
 1a2:	81 60       	ori	r24, 0x01	; 1
 1a4:	84 b9       	out	0x04, r24	; 4
	DDRB |= (1 << PB1); // passive buzzer
 1a6:	84 b1       	in	r24, 0x04	; 4
 1a8:	82 60       	ori	r24, 0x02	; 2
 1aa:	84 b9       	out	0x04, r24	; 4
	DDRD &= ~(1 << PD5); // IR-receiver
 1ac:	8a b1       	in	r24, 0x0a	; 10
 1ae:	8f 7d       	andi	r24, 0xDF	; 223
 1b0:	8a b9       	out	0x0a, r24	; 10
	DDRD &= ~(1 << PD4); // ultrasonic echo
 1b2:	8a b1       	in	r24, 0x0a	; 10
 1b4:	8f 7e       	andi	r24, 0xEF	; 239
 1b6:	8a b9       	out	0x0a, r24	; 10
	DDRD |= (1 << PD2); // red led
 1b8:	8a b1       	in	r24, 0x0a	; 10
 1ba:	84 60       	ori	r24, 0x04	; 4
 1bc:	8a b9       	out	0x0a, r24	; 10
	DDRD |= (1 << PD3); // green led
 1be:	8a b1       	in	r24, 0x0a	; 10
 1c0:	88 60       	ori	r24, 0x08	; 8
 1c2:	8a b9       	out	0x0a, r24	; 10
	
	sei();
 1c4:	78 94       	sei
    //int8_t g_IR_receiver = 0;
	//int8_t g_us_echo = 0;
    while (1) //TODO: signal goes through, voice works.
    {
		
		switch (g_STATE) {
 1c6:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <g_STATE>
 1ca:	81 11       	cpse	r24, r1
 1cc:	fc cf       	rjmp	.-8      	; 0x1c6 <main+0x26>
			//case COM_CONNECT:
				
			//break;
			case WAIT:
				distance = pulse();
 1ce:	0e 94 a5 00 	call	0x14a	; 0x14a <pulse>
 1d2:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 1d6:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
				if (distance < 50)
 1da:	c2 97       	sbiw	r24, 0x32	; 50
 1dc:	7c f4       	brge	.+30     	; 0x1fc <main+0x5c>
				{
					PORTD |= (1 << PD2);
 1de:	8b b1       	in	r24, 0x0b	; 11
 1e0:	84 60       	ori	r24, 0x04	; 4
 1e2:	8b b9       	out	0x0b, r24	; 11
					PORTD &= ~(1 << PD3);
 1e4:	8b b1       	in	r24, 0x0b	; 11
 1e6:	87 7f       	andi	r24, 0xF7	; 247
 1e8:	8b b9       	out	0x0b, r24	; 11
					//PORTB |= (1 << PB1);
					soundBuzzer();
 1ea:	0e 94 6c 00 	call	0xd8	; 0xd8 <soundBuzzer>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1ee:	8f e3       	ldi	r24, 0x3F	; 63
 1f0:	9f e1       	ldi	r25, 0x1F	; 31
 1f2:	01 97       	sbiw	r24, 0x01	; 1
 1f4:	f1 f7       	brne	.-4      	; 0x1f2 <main+0x52>
 1f6:	00 c0       	rjmp	.+0      	; 0x1f8 <main+0x58>
 1f8:	00 00       	nop
 1fa:	e5 cf       	rjmp	.-54     	; 0x1c6 <main+0x26>
					_delay_ms(2);
				}
				else
				{
					PORTD |= (1 << PD3);
 1fc:	8b b1       	in	r24, 0x0b	; 11
 1fe:	88 60       	ori	r24, 0x08	; 8
 200:	8b b9       	out	0x0b, r24	; 11
					PORTD &= ~(1 << PD2);
 202:	8b b1       	in	r24, 0x0b	; 11
 204:	8b 7f       	andi	r24, 0xFB	; 251
 206:	8b b9       	out	0x0b, r24	; 11
					//PORTB &= ~(1 << PB1);
					offBuzzer();
 208:	0e 94 9a 00 	call	0x134	; 0x134 <offBuzzer>
 20c:	8f e3       	ldi	r24, 0x3F	; 63
 20e:	9f e1       	ldi	r25, 0x1F	; 31
 210:	01 97       	sbiw	r24, 0x01	; 1
 212:	f1 f7       	brne	.-4      	; 0x210 <main+0x70>
 214:	00 c0       	rjmp	.+0      	; 0x216 <main+0x76>
 216:	00 00       	nop
 218:	d6 cf       	rjmp	.-84     	; 0x1c6 <main+0x26>

0000021a <__fixsfsi>:
 21a:	0e 94 14 01 	call	0x228	; 0x228 <__fixunssfsi>
 21e:	68 94       	set
 220:	b1 11       	cpse	r27, r1
 222:	0c 94 a3 01 	jmp	0x346	; 0x346 <__fp_szero>
 226:	08 95       	ret

00000228 <__fixunssfsi>:
 228:	0e 94 88 01 	call	0x310	; 0x310 <__fp_splitA>
 22c:	88 f0       	brcs	.+34     	; 0x250 <__fixunssfsi+0x28>
 22e:	9f 57       	subi	r25, 0x7F	; 127
 230:	98 f0       	brcs	.+38     	; 0x258 <__fixunssfsi+0x30>
 232:	b9 2f       	mov	r27, r25
 234:	99 27       	eor	r25, r25
 236:	b7 51       	subi	r27, 0x17	; 23
 238:	b0 f0       	brcs	.+44     	; 0x266 <__fixunssfsi+0x3e>
 23a:	e1 f0       	breq	.+56     	; 0x274 <__fixunssfsi+0x4c>
 23c:	66 0f       	add	r22, r22
 23e:	77 1f       	adc	r23, r23
 240:	88 1f       	adc	r24, r24
 242:	99 1f       	adc	r25, r25
 244:	1a f0       	brmi	.+6      	; 0x24c <__fixunssfsi+0x24>
 246:	ba 95       	dec	r27
 248:	c9 f7       	brne	.-14     	; 0x23c <__fixunssfsi+0x14>
 24a:	14 c0       	rjmp	.+40     	; 0x274 <__fixunssfsi+0x4c>
 24c:	b1 30       	cpi	r27, 0x01	; 1
 24e:	91 f0       	breq	.+36     	; 0x274 <__fixunssfsi+0x4c>
 250:	0e 94 a2 01 	call	0x344	; 0x344 <__fp_zero>
 254:	b1 e0       	ldi	r27, 0x01	; 1
 256:	08 95       	ret
 258:	0c 94 a2 01 	jmp	0x344	; 0x344 <__fp_zero>
 25c:	67 2f       	mov	r22, r23
 25e:	78 2f       	mov	r23, r24
 260:	88 27       	eor	r24, r24
 262:	b8 5f       	subi	r27, 0xF8	; 248
 264:	39 f0       	breq	.+14     	; 0x274 <__fixunssfsi+0x4c>
 266:	b9 3f       	cpi	r27, 0xF9	; 249
 268:	cc f3       	brlt	.-14     	; 0x25c <__fixunssfsi+0x34>
 26a:	86 95       	lsr	r24
 26c:	77 95       	ror	r23
 26e:	67 95       	ror	r22
 270:	b3 95       	inc	r27
 272:	d9 f7       	brne	.-10     	; 0x26a <__fixunssfsi+0x42>
 274:	3e f4       	brtc	.+14     	; 0x284 <__fixunssfsi+0x5c>
 276:	90 95       	com	r25
 278:	80 95       	com	r24
 27a:	70 95       	com	r23
 27c:	61 95       	neg	r22
 27e:	7f 4f       	sbci	r23, 0xFF	; 255
 280:	8f 4f       	sbci	r24, 0xFF	; 255
 282:	9f 4f       	sbci	r25, 0xFF	; 255
 284:	08 95       	ret

00000286 <__floatunsisf>:
 286:	e8 94       	clt
 288:	09 c0       	rjmp	.+18     	; 0x29c <__floatsisf+0x12>

0000028a <__floatsisf>:
 28a:	97 fb       	bst	r25, 7
 28c:	3e f4       	brtc	.+14     	; 0x29c <__floatsisf+0x12>
 28e:	90 95       	com	r25
 290:	80 95       	com	r24
 292:	70 95       	com	r23
 294:	61 95       	neg	r22
 296:	7f 4f       	sbci	r23, 0xFF	; 255
 298:	8f 4f       	sbci	r24, 0xFF	; 255
 29a:	9f 4f       	sbci	r25, 0xFF	; 255
 29c:	99 23       	and	r25, r25
 29e:	a9 f0       	breq	.+42     	; 0x2ca <__floatsisf+0x40>
 2a0:	f9 2f       	mov	r31, r25
 2a2:	96 e9       	ldi	r25, 0x96	; 150
 2a4:	bb 27       	eor	r27, r27
 2a6:	93 95       	inc	r25
 2a8:	f6 95       	lsr	r31
 2aa:	87 95       	ror	r24
 2ac:	77 95       	ror	r23
 2ae:	67 95       	ror	r22
 2b0:	b7 95       	ror	r27
 2b2:	f1 11       	cpse	r31, r1
 2b4:	f8 cf       	rjmp	.-16     	; 0x2a6 <__floatsisf+0x1c>
 2b6:	fa f4       	brpl	.+62     	; 0x2f6 <__floatsisf+0x6c>
 2b8:	bb 0f       	add	r27, r27
 2ba:	11 f4       	brne	.+4      	; 0x2c0 <__floatsisf+0x36>
 2bc:	60 ff       	sbrs	r22, 0
 2be:	1b c0       	rjmp	.+54     	; 0x2f6 <__floatsisf+0x6c>
 2c0:	6f 5f       	subi	r22, 0xFF	; 255
 2c2:	7f 4f       	sbci	r23, 0xFF	; 255
 2c4:	8f 4f       	sbci	r24, 0xFF	; 255
 2c6:	9f 4f       	sbci	r25, 0xFF	; 255
 2c8:	16 c0       	rjmp	.+44     	; 0x2f6 <__floatsisf+0x6c>
 2ca:	88 23       	and	r24, r24
 2cc:	11 f0       	breq	.+4      	; 0x2d2 <__floatsisf+0x48>
 2ce:	96 e9       	ldi	r25, 0x96	; 150
 2d0:	11 c0       	rjmp	.+34     	; 0x2f4 <__floatsisf+0x6a>
 2d2:	77 23       	and	r23, r23
 2d4:	21 f0       	breq	.+8      	; 0x2de <__floatsisf+0x54>
 2d6:	9e e8       	ldi	r25, 0x8E	; 142
 2d8:	87 2f       	mov	r24, r23
 2da:	76 2f       	mov	r23, r22
 2dc:	05 c0       	rjmp	.+10     	; 0x2e8 <__floatsisf+0x5e>
 2de:	66 23       	and	r22, r22
 2e0:	71 f0       	breq	.+28     	; 0x2fe <__floatsisf+0x74>
 2e2:	96 e8       	ldi	r25, 0x86	; 134
 2e4:	86 2f       	mov	r24, r22
 2e6:	70 e0       	ldi	r23, 0x00	; 0
 2e8:	60 e0       	ldi	r22, 0x00	; 0
 2ea:	2a f0       	brmi	.+10     	; 0x2f6 <__floatsisf+0x6c>
 2ec:	9a 95       	dec	r25
 2ee:	66 0f       	add	r22, r22
 2f0:	77 1f       	adc	r23, r23
 2f2:	88 1f       	adc	r24, r24
 2f4:	da f7       	brpl	.-10     	; 0x2ec <__floatsisf+0x62>
 2f6:	88 0f       	add	r24, r24
 2f8:	96 95       	lsr	r25
 2fa:	87 95       	ror	r24
 2fc:	97 f9       	bld	r25, 7
 2fe:	08 95       	ret

00000300 <__fp_split3>:
 300:	57 fd       	sbrc	r21, 7
 302:	90 58       	subi	r25, 0x80	; 128
 304:	44 0f       	add	r20, r20
 306:	55 1f       	adc	r21, r21
 308:	59 f0       	breq	.+22     	; 0x320 <__fp_splitA+0x10>
 30a:	5f 3f       	cpi	r21, 0xFF	; 255
 30c:	71 f0       	breq	.+28     	; 0x32a <__fp_splitA+0x1a>
 30e:	47 95       	ror	r20

00000310 <__fp_splitA>:
 310:	88 0f       	add	r24, r24
 312:	97 fb       	bst	r25, 7
 314:	99 1f       	adc	r25, r25
 316:	61 f0       	breq	.+24     	; 0x330 <__fp_splitA+0x20>
 318:	9f 3f       	cpi	r25, 0xFF	; 255
 31a:	79 f0       	breq	.+30     	; 0x33a <__fp_splitA+0x2a>
 31c:	87 95       	ror	r24
 31e:	08 95       	ret
 320:	12 16       	cp	r1, r18
 322:	13 06       	cpc	r1, r19
 324:	14 06       	cpc	r1, r20
 326:	55 1f       	adc	r21, r21
 328:	f2 cf       	rjmp	.-28     	; 0x30e <__fp_split3+0xe>
 32a:	46 95       	lsr	r20
 32c:	f1 df       	rcall	.-30     	; 0x310 <__fp_splitA>
 32e:	08 c0       	rjmp	.+16     	; 0x340 <__fp_splitA+0x30>
 330:	16 16       	cp	r1, r22
 332:	17 06       	cpc	r1, r23
 334:	18 06       	cpc	r1, r24
 336:	99 1f       	adc	r25, r25
 338:	f1 cf       	rjmp	.-30     	; 0x31c <__fp_splitA+0xc>
 33a:	86 95       	lsr	r24
 33c:	71 05       	cpc	r23, r1
 33e:	61 05       	cpc	r22, r1
 340:	08 94       	sec
 342:	08 95       	ret

00000344 <__fp_zero>:
 344:	e8 94       	clt

00000346 <__fp_szero>:
 346:	bb 27       	eor	r27, r27
 348:	66 27       	eor	r22, r22
 34a:	77 27       	eor	r23, r23
 34c:	cb 01       	movw	r24, r22
 34e:	97 f9       	bld	r25, 7
 350:	08 95       	ret

00000352 <__mulsf3>:
 352:	0e 94 bc 01 	call	0x378	; 0x378 <__mulsf3x>
 356:	0c 94 2d 02 	jmp	0x45a	; 0x45a <__fp_round>
 35a:	0e 94 1f 02 	call	0x43e	; 0x43e <__fp_pscA>
 35e:	38 f0       	brcs	.+14     	; 0x36e <__mulsf3+0x1c>
 360:	0e 94 26 02 	call	0x44c	; 0x44c <__fp_pscB>
 364:	20 f0       	brcs	.+8      	; 0x36e <__mulsf3+0x1c>
 366:	95 23       	and	r25, r21
 368:	11 f0       	breq	.+4      	; 0x36e <__mulsf3+0x1c>
 36a:	0c 94 16 02 	jmp	0x42c	; 0x42c <__fp_inf>
 36e:	0c 94 1c 02 	jmp	0x438	; 0x438 <__fp_nan>
 372:	11 24       	eor	r1, r1
 374:	0c 94 a3 01 	jmp	0x346	; 0x346 <__fp_szero>

00000378 <__mulsf3x>:
 378:	0e 94 80 01 	call	0x300	; 0x300 <__fp_split3>
 37c:	70 f3       	brcs	.-36     	; 0x35a <__mulsf3+0x8>

0000037e <__mulsf3_pse>:
 37e:	95 9f       	mul	r25, r21
 380:	c1 f3       	breq	.-16     	; 0x372 <__mulsf3+0x20>
 382:	95 0f       	add	r25, r21
 384:	50 e0       	ldi	r21, 0x00	; 0
 386:	55 1f       	adc	r21, r21
 388:	62 9f       	mul	r22, r18
 38a:	f0 01       	movw	r30, r0
 38c:	72 9f       	mul	r23, r18
 38e:	bb 27       	eor	r27, r27
 390:	f0 0d       	add	r31, r0
 392:	b1 1d       	adc	r27, r1
 394:	63 9f       	mul	r22, r19
 396:	aa 27       	eor	r26, r26
 398:	f0 0d       	add	r31, r0
 39a:	b1 1d       	adc	r27, r1
 39c:	aa 1f       	adc	r26, r26
 39e:	64 9f       	mul	r22, r20
 3a0:	66 27       	eor	r22, r22
 3a2:	b0 0d       	add	r27, r0
 3a4:	a1 1d       	adc	r26, r1
 3a6:	66 1f       	adc	r22, r22
 3a8:	82 9f       	mul	r24, r18
 3aa:	22 27       	eor	r18, r18
 3ac:	b0 0d       	add	r27, r0
 3ae:	a1 1d       	adc	r26, r1
 3b0:	62 1f       	adc	r22, r18
 3b2:	73 9f       	mul	r23, r19
 3b4:	b0 0d       	add	r27, r0
 3b6:	a1 1d       	adc	r26, r1
 3b8:	62 1f       	adc	r22, r18
 3ba:	83 9f       	mul	r24, r19
 3bc:	a0 0d       	add	r26, r0
 3be:	61 1d       	adc	r22, r1
 3c0:	22 1f       	adc	r18, r18
 3c2:	74 9f       	mul	r23, r20
 3c4:	33 27       	eor	r19, r19
 3c6:	a0 0d       	add	r26, r0
 3c8:	61 1d       	adc	r22, r1
 3ca:	23 1f       	adc	r18, r19
 3cc:	84 9f       	mul	r24, r20
 3ce:	60 0d       	add	r22, r0
 3d0:	21 1d       	adc	r18, r1
 3d2:	82 2f       	mov	r24, r18
 3d4:	76 2f       	mov	r23, r22
 3d6:	6a 2f       	mov	r22, r26
 3d8:	11 24       	eor	r1, r1
 3da:	9f 57       	subi	r25, 0x7F	; 127
 3dc:	50 40       	sbci	r21, 0x00	; 0
 3de:	9a f0       	brmi	.+38     	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
 3e0:	f1 f0       	breq	.+60     	; 0x41e <__EEPROM_REGION_LENGTH__+0x1e>
 3e2:	88 23       	and	r24, r24
 3e4:	4a f0       	brmi	.+18     	; 0x3f8 <__mulsf3_pse+0x7a>
 3e6:	ee 0f       	add	r30, r30
 3e8:	ff 1f       	adc	r31, r31
 3ea:	bb 1f       	adc	r27, r27
 3ec:	66 1f       	adc	r22, r22
 3ee:	77 1f       	adc	r23, r23
 3f0:	88 1f       	adc	r24, r24
 3f2:	91 50       	subi	r25, 0x01	; 1
 3f4:	50 40       	sbci	r21, 0x00	; 0
 3f6:	a9 f7       	brne	.-22     	; 0x3e2 <__mulsf3_pse+0x64>
 3f8:	9e 3f       	cpi	r25, 0xFE	; 254
 3fa:	51 05       	cpc	r21, r1
 3fc:	80 f0       	brcs	.+32     	; 0x41e <__EEPROM_REGION_LENGTH__+0x1e>
 3fe:	0c 94 16 02 	jmp	0x42c	; 0x42c <__fp_inf>
 402:	0c 94 a3 01 	jmp	0x346	; 0x346 <__fp_szero>
 406:	5f 3f       	cpi	r21, 0xFF	; 255
 408:	e4 f3       	brlt	.-8      	; 0x402 <__EEPROM_REGION_LENGTH__+0x2>
 40a:	98 3e       	cpi	r25, 0xE8	; 232
 40c:	d4 f3       	brlt	.-12     	; 0x402 <__EEPROM_REGION_LENGTH__+0x2>
 40e:	86 95       	lsr	r24
 410:	77 95       	ror	r23
 412:	67 95       	ror	r22
 414:	b7 95       	ror	r27
 416:	f7 95       	ror	r31
 418:	e7 95       	ror	r30
 41a:	9f 5f       	subi	r25, 0xFF	; 255
 41c:	c1 f7       	brne	.-16     	; 0x40e <__EEPROM_REGION_LENGTH__+0xe>
 41e:	fe 2b       	or	r31, r30
 420:	88 0f       	add	r24, r24
 422:	91 1d       	adc	r25, r1
 424:	96 95       	lsr	r25
 426:	87 95       	ror	r24
 428:	97 f9       	bld	r25, 7
 42a:	08 95       	ret

0000042c <__fp_inf>:
 42c:	97 f9       	bld	r25, 7
 42e:	9f 67       	ori	r25, 0x7F	; 127
 430:	80 e8       	ldi	r24, 0x80	; 128
 432:	70 e0       	ldi	r23, 0x00	; 0
 434:	60 e0       	ldi	r22, 0x00	; 0
 436:	08 95       	ret

00000438 <__fp_nan>:
 438:	9f ef       	ldi	r25, 0xFF	; 255
 43a:	80 ec       	ldi	r24, 0xC0	; 192
 43c:	08 95       	ret

0000043e <__fp_pscA>:
 43e:	00 24       	eor	r0, r0
 440:	0a 94       	dec	r0
 442:	16 16       	cp	r1, r22
 444:	17 06       	cpc	r1, r23
 446:	18 06       	cpc	r1, r24
 448:	09 06       	cpc	r0, r25
 44a:	08 95       	ret

0000044c <__fp_pscB>:
 44c:	00 24       	eor	r0, r0
 44e:	0a 94       	dec	r0
 450:	12 16       	cp	r1, r18
 452:	13 06       	cpc	r1, r19
 454:	14 06       	cpc	r1, r20
 456:	05 06       	cpc	r0, r21
 458:	08 95       	ret

0000045a <__fp_round>:
 45a:	09 2e       	mov	r0, r25
 45c:	03 94       	inc	r0
 45e:	00 0c       	add	r0, r0
 460:	11 f4       	brne	.+4      	; 0x466 <__fp_round+0xc>
 462:	88 23       	and	r24, r24
 464:	52 f0       	brmi	.+20     	; 0x47a <__fp_round+0x20>
 466:	bb 0f       	add	r27, r27
 468:	40 f4       	brcc	.+16     	; 0x47a <__fp_round+0x20>
 46a:	bf 2b       	or	r27, r31
 46c:	11 f4       	brne	.+4      	; 0x472 <__fp_round+0x18>
 46e:	60 ff       	sbrs	r22, 0
 470:	04 c0       	rjmp	.+8      	; 0x47a <__fp_round+0x20>
 472:	6f 5f       	subi	r22, 0xFF	; 255
 474:	7f 4f       	sbci	r23, 0xFF	; 255
 476:	8f 4f       	sbci	r24, 0xFF	; 255
 478:	9f 4f       	sbci	r25, 0xFF	; 255
 47a:	08 95       	ret

0000047c <__divmodsi4>:
 47c:	05 2e       	mov	r0, r21
 47e:	97 fb       	bst	r25, 7
 480:	1e f4       	brtc	.+6      	; 0x488 <__divmodsi4+0xc>
 482:	00 94       	com	r0
 484:	0e 94 55 02 	call	0x4aa	; 0x4aa <__negsi2>
 488:	57 fd       	sbrc	r21, 7
 48a:	07 d0       	rcall	.+14     	; 0x49a <__divmodsi4_neg2>
 48c:	0e 94 5d 02 	call	0x4ba	; 0x4ba <__udivmodsi4>
 490:	07 fc       	sbrc	r0, 7
 492:	03 d0       	rcall	.+6      	; 0x49a <__divmodsi4_neg2>
 494:	4e f4       	brtc	.+18     	; 0x4a8 <__divmodsi4_exit>
 496:	0c 94 55 02 	jmp	0x4aa	; 0x4aa <__negsi2>

0000049a <__divmodsi4_neg2>:
 49a:	50 95       	com	r21
 49c:	40 95       	com	r20
 49e:	30 95       	com	r19
 4a0:	21 95       	neg	r18
 4a2:	3f 4f       	sbci	r19, 0xFF	; 255
 4a4:	4f 4f       	sbci	r20, 0xFF	; 255
 4a6:	5f 4f       	sbci	r21, 0xFF	; 255

000004a8 <__divmodsi4_exit>:
 4a8:	08 95       	ret

000004aa <__negsi2>:
 4aa:	90 95       	com	r25
 4ac:	80 95       	com	r24
 4ae:	70 95       	com	r23
 4b0:	61 95       	neg	r22
 4b2:	7f 4f       	sbci	r23, 0xFF	; 255
 4b4:	8f 4f       	sbci	r24, 0xFF	; 255
 4b6:	9f 4f       	sbci	r25, 0xFF	; 255
 4b8:	08 95       	ret

000004ba <__udivmodsi4>:
 4ba:	a1 e2       	ldi	r26, 0x21	; 33
 4bc:	1a 2e       	mov	r1, r26
 4be:	aa 1b       	sub	r26, r26
 4c0:	bb 1b       	sub	r27, r27
 4c2:	fd 01       	movw	r30, r26
 4c4:	0d c0       	rjmp	.+26     	; 0x4e0 <__udivmodsi4_ep>

000004c6 <__udivmodsi4_loop>:
 4c6:	aa 1f       	adc	r26, r26
 4c8:	bb 1f       	adc	r27, r27
 4ca:	ee 1f       	adc	r30, r30
 4cc:	ff 1f       	adc	r31, r31
 4ce:	a2 17       	cp	r26, r18
 4d0:	b3 07       	cpc	r27, r19
 4d2:	e4 07       	cpc	r30, r20
 4d4:	f5 07       	cpc	r31, r21
 4d6:	20 f0       	brcs	.+8      	; 0x4e0 <__udivmodsi4_ep>
 4d8:	a2 1b       	sub	r26, r18
 4da:	b3 0b       	sbc	r27, r19
 4dc:	e4 0b       	sbc	r30, r20
 4de:	f5 0b       	sbc	r31, r21

000004e0 <__udivmodsi4_ep>:
 4e0:	66 1f       	adc	r22, r22
 4e2:	77 1f       	adc	r23, r23
 4e4:	88 1f       	adc	r24, r24
 4e6:	99 1f       	adc	r25, r25
 4e8:	1a 94       	dec	r1
 4ea:	69 f7       	brne	.-38     	; 0x4c6 <__udivmodsi4_loop>
 4ec:	60 95       	com	r22
 4ee:	70 95       	com	r23
 4f0:	80 95       	com	r24
 4f2:	90 95       	com	r25
 4f4:	9b 01       	movw	r18, r22
 4f6:	ac 01       	movw	r20, r24
 4f8:	bd 01       	movw	r22, r26
 4fa:	cf 01       	movw	r24, r30
 4fc:	08 95       	ret

000004fe <_exit>:
 4fe:	f8 94       	cli

00000500 <__stop_program>:
 500:	ff cf       	rjmp	.-2      	; 0x500 <__stop_program>
